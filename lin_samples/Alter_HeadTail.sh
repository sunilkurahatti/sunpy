#! /bin/sh
# Created 11/09/2017 for Feature F15727 PSI 23
# This script will alter the header and trailer record for Total count of records and Total count of Recepients field
# This script will also validate if there are any events in the file and if it is just header and trailer record then it will remove the generated file and complete successfully
# First argument is the Mobius Audit File name generated by the ETL

# 04/05/18 Rename Temp file names and backup file names as a part of the PROD defect
# 04/05/18 Created more meaningful error messages

echoLog () {

echo -e `date`: $1 >> $2/Alter_HeadTail.log 

}
###11/22 Added function to handle exceptions ##
exceptHand () {

if [ $1 -ne 0 ] ;
		then 
			echoLog "Error: $2 failed " $3
			if [ $5 -ne 0 ] ;
				then
					rm $(dirname $4)/$(basename $4 .tmp)_tmp*.tmp
					RETCODE=$?

					if [ $RETCODE -ne 0 ] ;
					then 
						echoLog "Removing Temp files inside exception handling failed" $3
					else
						echoLog "Exception Raised - Removed Temp files" $3
					fi	
			fi
			
			mv $(dirname $4)/$(basename $4 .tmp)_bkp.tmp $4
			RETCODE=$?
			
			if [ $RETCODE -ne 0 ] ;
				then 
					echoLog "Moving Contents from backup to actual file inside exception handling failed" $3			
				else
					echoLog "Exception Raised - Moving Contents from backup to actual file" $3
				fi	
				
			exit 1
		else
			echoLog "Success: $2 " $3
fi

}

###11/21 Added function to remove duplicates event ##

removeDupEvent () {

#echoLog "Remove duplicate function Start" $2


tmp1=$(dirname $1)/$(basename $1 .tmp)_tmp1.tmp
tmp2=$(dirname $1)/$(basename $1 .tmp)_tmp2.tmp
tmp3=$(dirname $1)/$(basename $1 .tmp)_tmp3.tmp
tmp4=$(dirname $1)/$(basename $1 .tmp)_tmp4.tmp
tmp5=$(dirname $1)/$(basename $1 .tmp)_tmp5.tmp
tmp6=$(dirname $1)/$(basename $1 .tmp)_tmp6.tmp
tmp7=$(dirname $1)/$(basename $1 .tmp)_tmp7.tmp

nl -b a $1 > $tmp1 
RETCODE=$?
exceptHand $RETCODE "Numbering lines in input file" $2 $1 1


while read line; do
	# Create sha256 uniq key per event record #

###01/12/18 Added len variable below to calculate the length of trim dynamically instead of fixed length ##

	len=`echo "$line" | awk '{ print $1" "$2}' | wc -c`

	v=`echo "$line" | cut -c$len-`
	y=`echo -n $v | sha256sum`
	
	echo $y "$line" >> $tmp2

done < $tmp1 
RETCODE=$?
exceptHand $RETCODE "While Loop" $2 $1 1


sort -t " " -k1,1 -k3,3n $tmp2 | sort -k1,1 -u | sort -k3,3n | cut -d '	' -f2- > $tmp3
RETCODE=$?
exceptHand $RETCODE "Sorting" $2 $1 1

sed -i -e '1d' -e '$d' $tmp3
RETCODE=$?
exceptHand $RETCODE "Replace characters" $2 $1 1

cat $tmp3 | awk '{print $1}' | uniq > $tmp4 
RETCODE=$?
exceptHand $RETCODE "Unique file creation step 1" $2 $1 1

sed -e '1d' -e '$d' $1 | awk '{print $1}' | uniq > $tmp5
RETCODE=$?
exceptHand $RETCODE "Unique file creation step 2" $2 $1 1

comm -23 $tmp5 $tmp4 > $tmp6
RETCODE=$?
exceptHand $RETCODE "File comparison" $2 $1 1

if [[ -s $tmp6 ]] ; then

	#echoLog "Identified Duplicate events to be removed" $2

	grep -Fvf $tmp6 $1 > $tmp7
	RETCODE=$?
	exceptHand $RETCODE "Replacing Contents in Temp 7" $2 $1 1	
				
	mv $tmp7 $1
	RETCODE=$?
	exceptHand $RETCODE "Moving contents to the input file" $2 $1 1

	rm -f $tmp1 $tmp2 $tmp3 $tmp4 $tmp5 $tmp6 
	RETCODE=$?
	exceptHand $RETCODE "Removing Temp files for Dup Events" $2 $1 1

else

	#echoLog "No duplicate events to remove" $2
	rm -f $tmp1 $tmp2 $tmp3 $tmp4 $tmp5 $tmp6 
	RETCODE=$?
	exceptHand $RETCODE "Removing Temp files for No Dup Events" $2 $1 1

fi 
				
#echoLog "Remove duplicate function End" $2
   
}

scrptDIR=$(dirname $0)
fileDIR=$(dirname $1)
fileName=$(basename $1)

if [ -f $1 ]
then 

countlines=$(wc -l < $1)

if [ $countlines -gt 2 ] ;
then 
	#echoLog "\n File $1 has details - Proceeding further processing" $scrptDIR
	#echoLog "Shell Script & Shell Logging directory: $scrptDIR " $scrptDIR
	#echoLog "Input File Directory: $fileDIR " $scrptDIR
	#echoLog "Input File Name: $fileName " $scrptDIR
	
	bkp=$fileDIR/$(basename $1 .tmp)_bkp.tmp
	
	cp $1 $bkp
	RETCODE=$?
	exceptHand $RETCODE "Create Back up file" $scrptDIR $1 0
	
	# Invoke remove duplicate function 11/21/2017
	removeDupEvent $1 $scrptDIR
	RETCODE=$?
	exceptHand $RETCODE "Invoking remove duplicate function" $scrptDIR $1 0	
	
	headRecpcnt=$(head -1 $1 | cut -c 1062-1070)
	headTotlcnt=$(head -1 $1 | cut -c 1071-1079)
	tailRecpcnt=$(tail -1 $1 | cut -c 1062-1070)
	tailTotlcnt=$(tail -1 $1 | cut -c 1071-1079)

	#echoLog "Input File $1 's - Recipient count: $headRecpcnt Total count: $headTotlcnt" $scrptDIR

	Recpcnt=$(printf "%09d\n" $(($(cat $1 | awk '{print $1}' | uniq | wc -l)-2)))
	Totlcnt=$(printf "%09d\n" $(wc -l < $1))
	
	SearchString=$headRecpcnt$headTotlcnt
	ReplaceString=$Recpcnt$Totlcnt

	if [ $SearchString = $ReplaceString ]
	then
		#echoLog "Recipient and Total counts are same between input and output file - exiting successfully " $scrptDIR
		rm $bkp
		RETCODE=$?
		exceptHand $RETCODE "Removing bkp file at Recipient and Total counts are same" $scrptDIR $1 0
		#echoLog "Backup file removed Successfully" $scrptDIR
		
		chmod 777 $1
		chmod 777 $scrptDIR/Alter_HeadTail.log
		
        # Remove last four character from filename
        mv "$1" "${1%????}"  
		RETCODE=$?
		exceptHand $RETCODE "Removing last four character from filename" $scrptDIR $1 0		
		#echoLog "Removed .tmp from file name successfully" $scrptDIR
		exit 0		
	else
		#echoLog "Output file's - Actual Recipient count: $Recpcnt Actual total count: $Totlcnt " $scrptDIR

#		cp $1 $1_bkp -- Commented on 11/21/2017
#		echo "Created	Backup File before editing" -- Commented on 11/21/2017

		sed -i "s/${SearchString}/${ReplaceString}/g" $1

		RETCODE=$?
		if [ $RETCODE -ne 0 ] ;
		then 
			#echoLog "Unable to replace header and trailer records for count" $scrptDIR
			exceptHand $RETCODE "Replace header and trailer records for count" $scrptDIR $1 0
			exit 1
		else
			#echoLog "File's Header and Trailer replaced successfully" $scrptDIR
			rm $bkp
			RETCODE=$?
			exceptHand $RETCODE "Removing bkp file at File's Header and Trailer replaced" $scrptDIR $1 0
			#echoLog "Backup file removed Successfully" $scrptDIR
			
			chmod 777 $1
			chmod 777 $scrptDIR/Alter_HeadTail.log
            
			# Remove last four character from filename
            mv "$1" "${1%????}"
			RETCODE=$?
			exceptHand $RETCODE "Removing last four character from filename" $scrptDIR $1 0 
			#echoLog "Removed .tmp from file name successfully" $scrptDIR			
			exit 0
		fi
	fi
	
else
	#echoLog "\n File $1 has no details - exiting successfully by removing file from directory" $scrptDIR
	# fix variable name
	rm $1
    RETCODE=$?
	exceptHand $RETCODE "Removing input file for no details" $scrptDIR $1 0
	
	exit 0
fi

else
	echoLog "\n File $1 could not be found " $scrptDIR
	exit 1
fi

